/* Auto-generated by genmsg_cpp for file /home/topo/ros/topokite/ueyecam/srv/setEdgeEnhancement.srv */
#ifndef UEYECAM_SERVICE_SETEDGEENHANCEMENT_H
#define UEYECAM_SERVICE_SETEDGEENHANCEMENT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace ueyecam
{
template <class ContainerAllocator>
struct setEdgeEnhancementRequest_ {
  typedef setEdgeEnhancementRequest_<ContainerAllocator> Type;

  setEdgeEnhancementRequest_()
  : edgeEnhancementSet(0)
  {
  }

  setEdgeEnhancementRequest_(const ContainerAllocator& _alloc)
  : edgeEnhancementSet(0)
  {
  }

  typedef int8_t _edgeEnhancementSet_type;
  int8_t edgeEnhancementSet;


private:
  static const char* __s_getDataType_() { return "ueyecam/setEdgeEnhancementRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "7f9fa91369afdf996173b4d7c8a8a339"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "6c12de1e51a773b0295489ad2b111707"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 edgeEnhancementSet\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, edgeEnhancementSet);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, edgeEnhancementSet);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(edgeEnhancementSet);
    return size;
  }

  typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct setEdgeEnhancementRequest
typedef  ::ueyecam::setEdgeEnhancementRequest_<std::allocator<void> > setEdgeEnhancementRequest;

typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementRequest> setEdgeEnhancementRequestPtr;
typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementRequest const> setEdgeEnhancementRequestConstPtr;


template <class ContainerAllocator>
struct setEdgeEnhancementResponse_ {
  typedef setEdgeEnhancementResponse_<ContainerAllocator> Type;

  setEdgeEnhancementResponse_()
  : edgeEnhancementGet(0)
  , edgeEnhancementGetString()
  {
  }

  setEdgeEnhancementResponse_(const ContainerAllocator& _alloc)
  : edgeEnhancementGet(0)
  , edgeEnhancementGetString(_alloc)
  {
  }

  typedef int8_t _edgeEnhancementGet_type;
  int8_t edgeEnhancementGet;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _edgeEnhancementGetString_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  edgeEnhancementGetString;


private:
  static const char* __s_getDataType_() { return "ueyecam/setEdgeEnhancementResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "af20a67d4724049a173c46c5ae32d275"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "6c12de1e51a773b0295489ad2b111707"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "int8 edgeEnhancementGet\n\
string edgeEnhancementGetString\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, edgeEnhancementGet);
    ros::serialization::serialize(stream, edgeEnhancementGetString);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, edgeEnhancementGet);
    ros::serialization::deserialize(stream, edgeEnhancementGetString);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(edgeEnhancementGet);
    size += ros::serialization::serializationLength(edgeEnhancementGetString);
    return size;
  }

  typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct setEdgeEnhancementResponse
typedef  ::ueyecam::setEdgeEnhancementResponse_<std::allocator<void> > setEdgeEnhancementResponse;

typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementResponse> setEdgeEnhancementResponsePtr;
typedef boost::shared_ptr< ::ueyecam::setEdgeEnhancementResponse const> setEdgeEnhancementResponseConstPtr;

struct setEdgeEnhancement
{

typedef setEdgeEnhancementRequest Request;
typedef setEdgeEnhancementResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct setEdgeEnhancement
} // namespace ueyecam

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7f9fa91369afdf996173b4d7c8a8a339";
  }

  static const char* value(const  ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x7f9fa91369afdf99ULL;
  static const uint64_t static_value2 = 0x6173b4d7c8a8a339ULL;
};

template<class ContainerAllocator>
struct DataType< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ueyecam/setEdgeEnhancementRequest";
  }

  static const char* value(const  ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 edgeEnhancementSet\n\
\n\
";
  }

  static const char* value(const  ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "af20a67d4724049a173c46c5ae32d275";
  }

  static const char* value(const  ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xaf20a67d4724049aULL;
  static const uint64_t static_value2 = 0x173c46c5ae32d275ULL;
};

template<class ContainerAllocator>
struct DataType< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ueyecam/setEdgeEnhancementResponse";
  }

  static const char* value(const  ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int8 edgeEnhancementGet\n\
string edgeEnhancementGetString\n\
\n\
";
  }

  static const char* value(const  ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.edgeEnhancementSet);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct setEdgeEnhancementRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.edgeEnhancementGet);
    stream.next(m.edgeEnhancementGetString);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct setEdgeEnhancementResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<ueyecam::setEdgeEnhancement> {
  static const char* value() 
  {
    return "6c12de1e51a773b0295489ad2b111707";
  }

  static const char* value(const ueyecam::setEdgeEnhancement&) { return value(); } 
};

template<>
struct DataType<ueyecam::setEdgeEnhancement> {
  static const char* value() 
  {
    return "ueyecam/setEdgeEnhancement";
  }

  static const char* value(const ueyecam::setEdgeEnhancement&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6c12de1e51a773b0295489ad2b111707";
  }

  static const char* value(const ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ueyecam/setEdgeEnhancement";
  }

  static const char* value(const ueyecam::setEdgeEnhancementRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6c12de1e51a773b0295489ad2b111707";
  }

  static const char* value(const ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ueyecam/setEdgeEnhancement";
  }

  static const char* value(const ueyecam::setEdgeEnhancementResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // UEYECAM_SERVICE_SETEDGEENHANCEMENT_H

